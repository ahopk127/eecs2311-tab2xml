* Changelog
** Unreleased
*** Added
    - You can now drag and drop text as well as files
    - Added a warning if you drag and drop a non-txt file
    - Added many more tests
*** Changed
    - Rewrote and upgraded documentation
    - Reduced the height of the background, making it work better on small screens
    - Changed the look and feel to LaF Dark
    - Tweaked the UI for metadata editing to make it more intuitive
    - Time signatures will now only appear on the first measure of ranges
*** Fixed
    - MeasureNarrowing now supports tabs that don't end in a newline
    - System now prevents the user from narrowing to an invalid measure (above the # of measures in the tab)
** [0.4.0] - [2021-04-05 Mon] (Week 11)
*** Added
    - Created inital draft of design document
    - The instrument is automatically detected (but this instrument selection can be overwritten)
    - Added the ability to narrow down the input to measures
    - Added the ability to set the output score's title and composer
    - Partially implemented the ability to set the time signatures of the output measures
*** Changed
    - Tweaked manual to clarify how to use TAB2XML in code
    - TabbedView's buttons become disabled when they shouldn't be pressed
    - You can no longer convert or save with an empty input/output
    - Changed the internal representation of measures to allow for calculating note duration
    - Error/Warning Highlighting is now cleared when the input is edited.
*** Fixed
    - #13 Wrong Input & Output Instrument Name
    - #21 Could not save output on MacOS
    - #29 Could not build on older Java versions because "text blocks are a preview feature"
    - Could not export to JAR, even though Gradle generates one
    - Fixed many more bugs
** [0.4.0-alpha.1] - [2021-03-22 Mon] (Week 9)
*** Changed
    - Updated README
    - Improved repeated measure functionality
** [0.3.0] - [2021-03-17 Wed] (Second Prototype)
*** Added
    - Added the ability to save the input to a file
    - Added a prompt before the user overwrites a file
    - Added more frontend tests
*** Changed
    - Rewrote README
    - Updated documentation to new version, incorporating customer feedback
    - The file chooser now starts at the previously selected directory instead of the user home directory
    - Created a common abstract superclass for all three Swing views, implementing common features
** [0.3.0-alpha.1] - [2021-03-15 Mon] (Week 8)
*** Added
    - Added new view, TabbedView, that uses tabs to combine the positives of single-entry and double-entry Views
    - Added a background to SingleEntryView and TabbedView
    - Added functionality for grace notes and repeat measures
    - Added the ability to make a test coverage report
    - Added more tests in the frontend and backend
    - Created internal grammar for drum tabs
*** Removed
    - It is no longer possible to resize the windows of SingleEntryView and TabbedView.  This was removed because of bugs it caused in combination with the new background; it will be added back if these bugs are fixed.
*** Fixed
    - The issue fixed in v0.2.2 was not fixed for drag-and-drop input
** [0.2.2] - [2021-03-10 Wed] 
*** Fixed
    - Fixed an issue that caused some text tabs to fail when loaded from a file, but not copy-pasted
** [0.2.1] - [2021-03-08]
*** Added
    - Started working on drum tab support
    - Added warning system (which doesn't halt parsing)
*** Changed
    - Changed theme from Swing default to system theme
** [0.2.0] - [2021-02-28] (Midterm Submission)
*** Added
    - Added more tests for both the frontend and backend
    - Added a model
    - When selecting a file, the appropriate file extension will be chosen for you
    - Added the ability to convert and save with one button press
    - The SingleEntryView can highlight the approximate location of errors
*** Changed
    - Changed parsing method to a parse tree using ANTLR
    - Errors are now reported via a dialog box.
** [0.1.0] - [2021-02-17] (First Prototype)
*** Added
    - Set up Gradle building
    - Created README and instruction manual
    - You can drag and drop text tab files into the input box
    - The outputted MusicXML now fully conforms to the standard.
    - Added input validation
    - Created tests for backend
*** Changed
    - Tweaked requirements from PeerScholar feedback
** [0.1.0-alpha.4] - [2021-02-08] (Week 4)
*** Added
    - Added use cases to requirements document
    - Text boxes in both Views now give a prompt the user telling them to enter text or load from a file.
    - Created base API for XML parsing and connected it to frontend.
    - Created unit tests for frontend
*** Changed
    - Updated requirements
    - Text boxes in both Views now use a monospace font.
    - Main.java can now be used to start the program.
** [0.1.0-alpha.3] - [2021-02-01] (Week 3)
*** Added
    - The parser can now parse tokens and convert them to data.
    - Both Views allow the user to select the tab's instrument.
    - Implemented the "Load from File" and "Save to File" functionality
    - SingleEntryView can now undo a conversion, reverting to the text tab.
*** Changed
    - Simplified the View's API
** [0.1.0-alpha.2] - [2021-01-25] (Week 2)
*** Added
    - Created the View interface
    - Created SingleEntryView, DoubleEntryView and ViewBot
    - Created Presenter & connected to back-end code
    - Created Lexer
** [0.1.0-alpha.1] - [2021-01-18] (Week 1)
*** Added
    - Created project
    - Initial requirements document
