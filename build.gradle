plugins {
    id "java"
    id "application"
    id "antlr"
    id "jacoco"
}

java {
	sourceCompatibility = JavaVersion.VERSION_11
}

mainClassName = 'tab2xml.Main'

repositories {
    mavenCentral()
	mavenLocal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
	antlr "org.antlr:antlr4:4.9.2"
	implementation "org.antlr:antlr4-runtime:4.9.2"
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
	}
}

generateGrammarSource {
	println "Generating grammar sources..."
    maxHeapSize = "64m"
    arguments += [ "-visitor", 
    			   "-listener",
                   "-long-messages"]
    outputDirectory = file("${projectDir}/src/generated/java")
}

clean {
    delete file("${projectDir}/src/generated/java/tab2xml")
}

sourceSets {
    generated{
        java.srcDir "${projectDir}/src/generated/java/"
    }

    main {
        java.srcDirs += "${projectDir}/src/generated/java/"
    }
}

compileJava {
    dependsOn generateGrammarSource
}

jacoco {
	toolVersion = "0.8.6"
	reportsDirectory = file("$buildDir/reports/jacoco")
}

test {
  useJUnitPlatform()
  testLogging {
    events 'passed', 'skipped', 'failed'
  }
  finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

task debug {
	group = "application"
	description = "Runs this project in debug mode on prot 2311"
	doFirst {
		application {
			applicationDefaultJvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=2311']
		}
	}
}

debug.finalizedBy run

run {
}